AWSTemplateFormatVersion: 2010-09-09
Description: 'This template is for creating a Infrastructure, Which contains 2 availabiliy zones 
in a VPC with 2 public subnets and 2 private subnets. One of the public subnet contains a JumpBox from 
which we can connect to all other instances in the VPC. There is a RDS DB with MySQl engine which can 
be connected only from the app instance in the private subnet.'

Parameters:
  # NetworkStackURL:
  #   Description: URL of the Network Stack
  #   Type: String
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  EnvironmentName:
    Description: Environment Name to deploy the server
    Type: String
    AllowedValues: [Development, Production]
    ConstraintDescription: must be Development or Production
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance.
    Type: String
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.
  # KeyName:
  #   Description: Name of an existing EC2 KeyPair to enable SSH access to the instance.
  #   Type: 'AWS::EC2::KeyPair::KeyName'
  #   ConstraintDescription: Must be the name of an existing EC2 KeyPair.
  # SSHLocation:
  #   Description: ' The IP address range that can be used to access the web server using SSH.'
  #   Type: String
  #   MinLength: '9'
  #   MaxLength: '18'
  #   Default: 0.0.0.0/0
  #   AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
  #   ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  # TCPLocation:
  #   Description: ' The IP address range that can be used to access the server using TCP from JumpBox.'
  #   Type: String
  #   MinLength: '9'
  #   MaxLength: '18'
  #   Default: 10.0.1.0/24
  #   AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
  #   ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  # DBInstanceID:
  #   Default: RDSDBInstance
  #   Description: My database instance
  #   Type: String
  #   MinLength: '1'
  #   MaxLength: '63'
  #   AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
  #   ConstraintDescription: >-
  #     Must begin with a letter and must not end with a hyphen or contain two
  #     consecutive hyphens.
  # DBName:
  #   Default: RDSDemoDB
  #   Description: Demo database
  #   Type: String
  #   MinLength: '1'
  #   MaxLength: '64'
  #   AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
  #   ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.
  # DBInstanceClass:
  #   Default: db.t2.micro
  #   Description: DB instance class
  #   Type: String
  #   ConstraintDescription: Must select a valid DB instance type.
  # DBAllocatedStorage:
  #   Default: '20'
  #   Description: The size of the database (GiB)
  #   Type: Number
  #   MinValue: '20'
  #   MaxValue: '65536'
  #   ConstraintDescription: must be between 20 and 65536 GiB.
  # DBUsername:
  #   NoEcho: 'true'
  #   Description: Username for MySQL database access
  #   Type: String
  #   MinLength: '1'
  #   MaxLength: '16'
  #   AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
  #   ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  # DBPassword:
    # NoEcho: 'true'
    # Description: Password MySQL database access
    # Type: String
    # MinLength: '8'
    # MaxLength: '41'
    # AllowedPattern: '[a-zA-Z0-9]*'
    # ConstraintDescription: must contain only alphanumeric characters.

Mappings:
  EnvironmentToInstanceType:
    Development:
      instanceType: t2.micro
    Production:
      instanceType: t2.small #production is only for demo. Selecting t2.small will incur cost

Resources:
  # NetworkStack:
  #   Type: AWS::CloudFormation::Stack
  #   Properties:
  #     TemplateURL: !Ref NetworkStackURL
  #     # Parameters:
  #     #   ApplicationName: !Ref AWS::StackName
  #      # VPCId: !ImportValue VPC
  #     TimeoutInMinutes: 5
#EC2Instance for the JumpBox
  JumpBoxInstance: 
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !FindInMap [EnvironmentToInstanceType, !Ref 'EnvironmentName', instanceType]
      ImageId: !Ref LatestAmiId
      KeyName: !Ref KeyName
      Tags:
        - Key: Name
          Value: JumpBox
      NetworkInterfaces: 
      - AssociatePublicIpAddress: "true"
        DeviceIndex: "0"
        SubnetId:  !ImportValue JumpBoxPublicSubnet
        GroupSet: 
          - !ImportValue WebServerSecurityGroup
#EC2Instance for the Front facing Server
  FrontServerInstance: 
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !FindInMap [EnvironmentToInstanceType, !Ref 'EnvironmentName', instanceType]
      ImageId: !Ref LatestAmiId
      KeyName: !Ref KeyName
      SubnetId: !ImportValue FrontServerPrivateSubnet
      SecurityGroupIds:
        - !ImportValue FrontInstanceSecurityGroup
      Tags:
        - Key: Name
          Value: FrontServerInstance

#EC2Instance for the App server
  AppServerInstance: 
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !FindInMap [EnvironmentToInstanceType, !Ref 'EnvironmentName', instanceType]
      ImageId: !Ref LatestAmiId
      KeyName: !Ref KeyName
      SubnetId: !ImportValue AppServerPrivateSubnet
      SecurityGroupIds:
        - !ImportValue AppInstanceSecurityGroup
      Tags:
        - Key: Name
          Value: AppServerInstance
Outputs:
  JumpBoxPublicIp:
    Description: 'JumpBox Public IP'
    Value: !Sub '${JumpBoxInstance.PublicIp}'
    Export:
      Name: JumpBoxIp
